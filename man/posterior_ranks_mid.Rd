% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcid rank.R
\name{posterior_ranks_mid}
\alias{posterior_ranks_mid}
\alias{posterior_rank_probs_mid}
\title{Treatment rankings and rank probabilities}
\usage{
posterior_ranks_mid(
  x,
  newdata = NULL,
  study = NULL,
  lower_better = TRUE,
  probs = c(0.025, 0.25, 0.5, 0.75, 0.975),
  sucra = FALSE,
  summary = TRUE,
  mid = 0,
  method = "midpoint"
)

posterior_rank_probs_mid(
  x,
  newdata = NULL,
  study = NULL,
  lower_better = TRUE,
  cumulative = FALSE,
  sucra = FALSE,
  mid = NULL,
  method = "midpoint"
)
}
\arguments{
\item{x}{A `stan_nma` object created by [nma()]}

\item{newdata}{Only used if a regression model is fitted. A data frame of
study details, one row per study, giving the covariate values at which to
produce relative effects. Column names must match variables in the
regression model. If `NULL`, relative effects are produced for all studies
in the network.}

\item{study}{Column of `newdata` which specifies study names, otherwise
studies will be labelled by row number.}

\item{lower_better}{Logical, are lower treatment effects better (`TRUE`;
default) or higher better (`FALSE`)? See details.}

\item{probs}{Numeric vector of quantiles of interest to present in computed
summary, default `c(0.025, 0.25, 0.5, 0.75, 0.975)`}

\item{sucra}{Logical, calculate the surface under the cumulative ranking
curve (SUCRA) for each treatment? Default `FALSE`.}

\item{summary}{Logical, calculate posterior summaries? Default `TRUE`.}

\item{mid}{Numeric, a positive value, account for minimally important difference?
Default of 0, i.e. no minimally important difference.}

\item{cumulative}{Logical, return cumulative rank probabilities? Default is
`FALSE`, return posterior probabilities of each treatment having a given
rank. If `TRUE`, cumulative posterior rank probabilities are returned for
each treatment having a given rank or better.}
}
\value{
A [nma_summary] object if `summary = TRUE`, otherwise a list
  containing a 3D MCMC array of samples and (for regression models) a data
  frame of study information.
}
\description{
Produce posterior treatment rankings and rank probabilities from a fitted NMA
model. Specify a minimally important difference (MID) specific to the outcome
and its scale to require ranking to be based on an MID.
When a meta-regression is fitted with effect modifier interactions
with treatment, posterior ranks will differ by study population.
}
\details{
The function `posterior_ranks_mid()` produces posterior rankings, which
  have a distribution (e.g. mean/median rank and 95% Credible Interval). The
  function `posterior_rank_probs_mid()` produces rank probabilities, which give
  the posterior probabilities of being ranked first, second, etc. out of all
  treatments.

  When a minimally important difference (MID) is specified, treatments will
  only be ranked as superior to one another (i.e. ranked higher or lower than
  one another) only if an MID exists between them.

  The argument `lower_better` specifies whether lower treatment
  effects or higher treatment effects are preferred. For example, with a
  negative binary outcome lower (more negative) log odds ratios are
  preferred, so `lower_better = TRUE`. Conversely, for example, if treatments
  aim to increase the rate of a positive outcome then `lower_better = FALSE`.

  @examples
  # example code

  library(multinma)
  library(mid.rank.nma)

  #load data
  data(Senn2013)
  head(Senn2013)

  Senn2013$se[Senn2013$study == "Willms1999"][2] <- 0.4 #Impute standard error for reference arm

  #prepare network
  diabetes_net <- set_agd_contrast(Senn2013,
                                study = study,
                                trt = trt,
                                y = y,
                                se = se,
                                trt_ref = "Placebo")

  #fit model
  diabetes_fit_FE <- nma(diabetes_net,
                      trt_effects = "fixed",
                      prior_intercept = normal(scale = 100),
                      prior_trt = normal(scale = 100))



  # With minimally important difference
  mid <- 0.5

  rank_mid <- posterior_ranks_mid(diabetes_fit_FE, summary = TRUE, sucra = TRUE, mid = mid)
  rank_probs_mid <- posterior_rank_probs_mid(diabetes_fit_FE, mid = mid)
  rank_probs_cum_mid <- posterior_rank_probs_mid(diabetes_fit_FE, cumulative = T, mid = mid)

  plot(rank_mid)
  plot(rank_probs_mid)
  plot(rank_probs_cum_mid)
}
\seealso{
[plot.nma_summary()] for plotting the ranks and rank probabilities.
}
